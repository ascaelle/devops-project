name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature/*' # Push sur une branche de feature
      - main # Merge dans la branche principale
  pull_request:
    branches:
      - main # Pull request vers la branche principale
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12, 14, 16, 18] # Tester contre plusieurs versions de Node.js
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  analyse-hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Hadolint
        run: |
          curl -sSL https://raw.githubusercontent.com/hadolint/hadolint/master/install.sh | bash
          sudo mv /hadolint /usr/local/bin
      - name: Run Hadolint
        run: hadolint Dockerfile

  analyse-semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Semgrep
        run: |
          curl -sSL https://raw.githubusercontent.com/returntocorp/semgrep/master/install.sh | bash
          sudo mv /semgrep /usr/local/bin
      - name: Run Semgrep
        run: semgrep --config .semgreprc src

  scan-trivy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t nodejsapp:latest .
      - name: Scan image with Trivy
        run: trivy nodejsapp:latest


  analyze:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ESLint
        run: npm run lint # Lancer l'analyse statique du code avec ESLint

      - name: Scan Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v2
        with:
          dockerfile: Dockerfile

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/ci # Utiliser la configuration de Semgrep pour le CI

  build-and-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest

      - name: Security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest